#!/bin/bash -
#===============================================================================
#
#          FILE: wallpapers
#
#         USAGE: ./wallpapers option
#
#   DESCRIPTION: Wrapper script that does daemon control for the wallpaper chane
#                scripts.
#  REQUIREMENTS: start-stop-daemon, pgrep
#          BUGS: None known
#        AUTHOR: Christopher Hubbard (CSH), chubbard@iwillfearnoevil.com
#  ORGANIZATION: Home
#       CREATED: 11/04/2022 05:31:21 PM
#      REVISION: Amanda
#===============================================================================

usage() {
cat <<EOF

Usage: $0 options

This script is a wrapper to provide some process control of the Multiwallpaper system.
It is preferred that this be the controlling script for the python script to call since
what its job is should be reproducible by a human manually.  In this case, calling this
script with different arguments should return a standard output style.

Supported options:
New     - Create a new image index.  Destroys the old one
Update  - Add images to index that are newer than X days ago (defined in multi.cfg)
Random  - Randomize the index file
Start   - Start wallpaper daemon
Stop    - Stop wallpaper daemon
Status  - Check if pid is actually running daemon
Instant - Single change of active wallpaper
Help    - Show this help screen
*       - Return supported options list
EOF
}

new() {
  ${DAEMON} new || exit 1
}
update() {
  ${DAEMON} update || exit 1

}
random() {
  ${DAEMON} random || exit 1
}
start() {

IS_RUNNING=$(pgrep -fx "/bin/bash /home/${USER}/.multi_wall/multi_wallpapers.sh start")
if [[ $? -ne 1 ]]; then
  echo -e "Multi Wallpaper changer already running..."
  if [[ ${IS_RUNNING} -eq $(cat ${PIDFILE}) ]]; then
    echo -e "Multi Wallpaper pidfile is correct"
    exit 0
  else
    echo ${IS_RUNNING} > ${PIDFILE}
    echo -e "Multi Wallpaper pidfile was stale.  Update complete."
    exit 0
  fi
else
  # Why reinvent daemon controls when this just works?
  start-stop-daemon --start --background --nicelevel 14 -m --pidfile ${PIDFILE} --exec /bin/bash $DAEMON start || exit 2
fi  
}

stop() {
  # No need to be nice here, as this is something safe to kill whenever
  cat ${PIDFILE} 2> /dev/null | xargs kill -9 2> /dev/null
  rm -f ${PIDFILE}
}
instant() {
  ${DAEMON} instant || exit 1

}

status() {
if [[ ! -e ${PIDFILE} ]]; then
  echo "Status - Daemon is not running."
  exit 0
else
  PID=$(cat ${PIDFILE})
  if [[ -z ${PID} ]]; then
    echo "Status - Error.  Pidfile is impty"
    exit 1
  fi
  if [[ -e /proc/${PID} ]]; then
    echo -e "Status - Multi Wallpapers is running in daemon mode"
  else
    echo -e "Status - Multi Wallpapers is not running.  Stale pidfile"
    rm -f ${PIDFILE}
    exit 0
  fi
fi
}

isroot() {
if [[ $(id -u) -eq 0 ]]; then
  echo -e "FATAL - This script is not designed to be run as root user or using sudo"
  exit 2
fi
}

# Set script defaults here
NAME=multi_wallpapers.sh
USER=$(whoami)
DAEMON=/home/${USER}/.multi_wall/$NAME
PIDFILE=/home/${USER}/.multi_wall/$NAME.pid

# Logic check before going any further
isroot

case ${1} in
  [Hh]e*)  usage   ;;
  [Nn]e*)  new     ;;
  [Uu]p*)  update  ;;
  [Rr]a*)  random  ;;
  [Ss]tar*)start   ;;
  [Ss]tat*)status  ;;
  [Ss]to*) stop    ;;
  [Ii]n*)  instant ;;
  *) echo "Script requires only one of the following args \"Help|New|Update|Random|Status|Start|Stop|Instant\"" ; exit 0 ;;
esac

# Run the functions and then quietly exit
exit 0
